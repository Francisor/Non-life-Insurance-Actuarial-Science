x = seq(0, 4, 0.01)
f1 = sqrt(0.5/(2*pi*x^3))*exp(-0.5*(x-1)^2/(2*1^2*x))
f2 = sqrt(1/(2*pi*x^3))*exp(-1*(x-1)^2/(2*1^2*x))
f3 = sqrt(5/(2*pi*x^3))*exp(-5*(x-1)^2/(2*1^2*x))
f4 = sqrt(10/(2*pi*x^3))*exp(-10*(x-1)^2/(2*1^2*x))
matplot(x, cbind(f1, f2, f3, f4), type = 'l', lty = 1:4, lwd = 2)
legend(2, 1, c('IG(1, 0.5)', 'IG(1, 1)', 'IG(1, 5)', 'IG(1, 10)'), lty=1:4, col=1:4, lwd=c(3, 3, 3, 3))
lambda.po <- c(1, 2, 5, 10) # lambda 取值为 1,2,5,10
x0 <- seq(0, 25)            # x 取值为 0-25 的整数
f1 <- dpois(x0, lambda = lambda.po[1], log = FALSE)
f2 <- dpois(x0, lambda = lambda.po[2], log = FALSE)
f3 <- dpois(x0, lambda = lambda.po[3], log = FALSE)
f4 <- dpois(x0, lambda = lambda.po[4], log = FALSE)
par(mfrow = c(1,1))
matplot(x0, cbind(f1, f2, f3, f4), type = 'l', lty = 1:4, lwd = 2)
par(mfrow = c(2,2))
for (i in 1:4){
fpo <- dpois(x0, lambda = lambda.po[i], log = FALSE)
barplot(fpo, main = paste0('lambda = ', lambda.po[i]),
col = 'gray', beside = TRUE, names.arg = 0:25, legend.text = TRUE)
lines(x0, fpo, col = 2, lwd = 2)
}
# ================================================================
# 2. 负二项分布
# ================================================================
# 参数 r = size
# 参数 beta = q
dnbinom(x, size, prob, mu, log = FALSE)
pnbinom(q, size, prob, mu, lower.tail = TRUE, log.p = FALSE)
qnbinom(p, size, prob, mu, lower.tail = TRUE, log.p = FALSE)
rnbinom(n, size, prob, mu)
# # 画图
# r0 <- c(1, 2, 3, 2, 2, 2)
# beta0 <- c(0.3, 0.3, 0.3, 0.2, 0.3, 0.4)
# x0 <- seq(0, 20)
# ylim0 <- list(c(0,0.3),
#               c(0,0.12),
#               c(0,0.1),
#               c(0,0.2),
#               c(0,0.2),
#               c(0,0.2)
#               )
#
# par(mfrow = c(2, 3) )
# for (i in 1:length(beta0)){
#   fpo <- dnbinom(x0, size = r0[i], prob = beta0[i], log = FALSE)
#   barplot(fpo, main = paste0('r = ', r0[i], ',  ','beta = ', beta0[i]), names.arg = x0, ylim = ylim0[[i]]
#   )
# }
# -----------------------------------------------------------------
# 例： 零截断负二项分布的计算
# -----------------------------------------------------------------
##负二项分布的概率
x = 0:10
p = dnbinom(x, 4, 0.7)
round(p,3)
##零截断负二项分布的概率
p0 = p[1]
##零点的概率
pt1 = p[2:11]/(1-p0)
##其它点上的概率
pt = c(0, pt1)
round(pt, 3)
##绘图比较负二项和零截断负二项的概率
com = rbind(负二项 = p, 零截断负二项 = pt)
par(mfrow = c(1, 1))
barplot(com, beside = TRUE, names.arg = 0:10,legend.text = TRUE)
# -----------------------------------------------------------------
#例： 零调整负二项分布的计算
# -----------------------------------------------------------------
##负二项分布的概率
x = 0:10
p = dnbinom(x, 4, 0.7)
round(p,3)
##零调整负二项分布的概率
p0 = 0.3
##调整零点的概率
pm = (1 - p0)*p[2:11]/(1 - p[1])
##其它点上的概率
pm = c(p0, pm)
round(pm, 3)
##绘图
com = rbind(负二项 = p, 零调整负二项 = pm)
barplot(com, beside = TRUE, names.arg = 0:10, legend.text = TRUE)
pbinom(q, size, prob, lower.tail = TRUE, log.p = FALSE)
qbinom(p, size, prob, lower.tail = TRUE, log.p = FALSE)
rbinom(n, size, prob)
# 画图
m0 <- c(1, 5, 10, 10, 10, 10)
q0 <- c(0.3, 0.3, 0.3, 0.1, 0.2, 0.3)
x0 <- seq(0, 10)
par(mfrow = c(2, 3) )
for (i in 1:length(m0)){
fpo <- dbinom(x0, size = m0[i], prob = q0[i], log = FALSE)
barplot(fpo,
main = paste0('m = ', m0[i], ',  ','q = ', q0[i]),
names.arg = x0,
)
}
# ================================================================
# 几何分布
# ================================================================
# 画图
r0 <- 1
beta0 <- c(0.1, 0.2, 0.3)
x0 <- seq(0, 20)
par(mfrow = c(1, 3) )
for (i in 1:length(beta0)){
fpo <- dnbinom(x0, size = r0, prob = beta0[i], log = FALSE)
barplot(fpo,
main = paste0('beta = ', beta0[i]),
names.arg = x0
)
}
# ==========================================
# 指数分布
# ===========================================
theta <- c(0.5, 1, 2)
x0 <- seq(0.001, 10, length.out = 100)
par(mfrow = c(1, 1) )
fexp <- dexp(x0, rate = theta[1], log = FALSE)
plot(x0, fexp, type = 'l',ylim = c(0,0.5), main = '')
for (i in 1:3){
fexp <- dexp(x0, rate = theta[i], log = FALSE)
lines(x0, fexp, type = 'l', lty = i, ylim = c(0,0.5))
}
legend(x = 6, y = 0.4, legend = c('theta = 0.5', 'theta = 1', 'theta = 2'),
lty = c(1,2,3), bty = "n"
)
# ==========================================
# 伽马分布
# ===========================================
par(mfrow = c(1, 2) )
theta <- c(0.5, 1, 2)     # 尺度参数/比率参数
x0 <- seq(0.001, 15, length.out = 100)
fga <- dgamma(x0,  shape = alpha, rate = theta[1])
plot(x0, fga, type = 'l',ylim = c(0,0.8), main = '')
# 固定形状参数
alpha <- 2                # 形状参数
for (i in 1:3){
fga <- dgamma(x0,  shape = alpha, rate = theta[i])
lines(x0, fga, type = 'l', lty = i, ylim = c(0,0.8))
}
legend(x = 6, y = 0.6,
legend = c('alpha = 2, theta = 0.5',
'alpha = 2, theta = 1',
'alpha = 2, theta = 2'),
lty = c(1,2,3), bty = "n"
)
theta <- 0.5
x0 <- seq(0.001, 15, length.out = 100)
# 固定尺度参数
alpha <- c(1,2,3)
fga <- dgamma(x0,  shape = alpha[1], rate = theta)
plot(x0, fga, type = 'l',ylim = c(0,0.5), main = '')
for (i in 1:3){
fga <- dgamma(x0,  shape = alpha[i], rate = theta)
lines(x0, fga, type = 'l', lty = i, ylim = c(0,0.5))
}
legend(x = 6, y = 0.3,
legend = c('alpha = 1, theta = 0.5',
'alpha = 2, theta = 0.5',
'alpha = 3, theta = 0.5'),
lty = c(1,2,3), bty = "n"
)
# ==========================================
# 逆高斯分布
# ===========================================
# 定义逆高斯分布的密度函数 fx
dinvguass <- function(y, alpha, theta, ... ){
fx <- alpha/(2*pi*theta*y^3)^0.5*exp(-(alpha - theta*y)^2/(2*theta*y))
return(fx)
}
par(mfrow = c(1, 2) )
# 固定 alpha
alpha <- 2
theta <- c(0.5, 1, 2)
x0 <- seq(0.001, 15, length.out = 100)
fig <- dinvguass(x0,  alpha = alpha, theta = theta[1])
plot(x0, fig, type = 'l',ylim = c(0,1), main = '')
for (i in 1:3){
fig <- dinvguass(x0,  alpha = alpha, theta = theta[i])
lines(x0, fig, type = 'l', lty = i, ylim = c(0, 1))
}
legend(x = 6, y = 0.8,
legend = c('alpha = 2, theta = 0.5',
'alpha = 2, theta = 1',
'alpha = 2, theta = 2'),
lty = c(1,2,3), bty = "n"
)
# 固定 theta
alpha <- c(1,2,3)
x0 <- seq(0.001, 15, length.out = 100)
fig <- dinvguass(x0,  alpha = alpha[1], theta = theta)
theta <- 0.5
plot(x0, fig, type = 'l',ylim = c(0,0.6), main = '')
for (i in 1:3){
fig <- dinvguass(x0,  alpha = alpha[i], theta = theta)
lines(x0, fig, type = 'l', lty = i, ylim = c(0,0.6))
}
legend(x = 6, y = 0.5,
legend = c('alpha = 1, theta = 0.5',
'alpha = 2, theta = 0.5',
'alpha = 3, theta = 0.5'),
lty = c(1,2,3), bty = "n"
)
# ==========================================
# 对数正态分布
# ===========================================
# 密度函数
dlnorm
par(mfrow = c(1, 2) )
# 固定 mu
mu <- 2
